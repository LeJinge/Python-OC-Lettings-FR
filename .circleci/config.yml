version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.8
    resource_class: large  # Augmente les ressources allouées à ce job
    environment:
      DJANGO_SETTINGS_MODULE: "oc_lettings_site.settings"
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Install Dependencies
          command: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
      - run:
          name: Run Flake8
          command: flake8 .
      - run:
          name: Install Google Chrome
          command: |
            sudo apt-get update
            sudo apt-get install -y wget unzip
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
      - run:
          name: Install ChromeDriver
          command: |
            CHROME_DRIVER_VERSION=$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)
            wget -N http://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip
            unzip chromedriver_linux64.zip
            sudo mv -f chromedriver /usr/local/bin/chromedriver
            sudo chmod 0755 /usr/local/bin/chromedriver
      - run:
          name: Start Django Server
          command: |
            nohup python manage.py runserver 0.0.0.0:8000 &
            sleep 5  # Attendre quelques secondes pour s'assurer que le serveur démarre
      - run:
          name: Run Tests with Coverage
          command: |
            coverage run --source='.' manage.py test
            coverage report
            coverage xml
      - run:
          name: Ensure Coverage is Above 80%
          command: coverage report --fail-under=80
      - run:
          name: Build Docker Image
          command: docker build -t lejinge/oc-lettings:latest .
      - run:
          name: Push Docker Image
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push lejinge/oc-lettings:latest

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only: master
